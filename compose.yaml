services:
  mongo:
    image: mongo:4.2.24-bionic
    restart: always
    container_name: mongo
    networks:
      - wpp-network
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.stats().ok' | mongo localhost:27017/test --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/var/lib/mongo/data

  redis:
    image: redis
    restart: always
    container_name: redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/var/lib/data
    networks:
      - wpp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  wppconnect-server-hml:
    build:
      context: ./wppconnect-server-hml
      dockerfile: Dockerfile
    restart: always
    image: wppconnect-server-hml
    container_name: wppconnect-server-hml
    hostname: wppconnect-server-hml
    entrypoint: ["docker-entrypoint.sh", "yarn", "dev"]
    environment:
      - SECRET_KEY_SERVER=${SECRET_KEY_SERVER}
      - PORT=${PORT}
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8093:21483"
    networks:
      - wpp-network
    depends_on:
      - mongo
      - redis
    volumes:
      - .:/app
      - ./userDataDir:/home/node/app/userDataDir
    tty: true
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 500M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  wppconnect-server-hml2:
    build:
      context: ./wppconnect-server-hml2
      dockerfile: Dockerfile
    restart: always
    image: wppconnect-server-hml2
    container_name: wppconnect-server-hml2
    hostname: wppconnect-server-hml2
    entrypoint: ["docker-entrypoint.sh", "yarn", "dev"]
    environment:
      - SECRET_KEY_SERVER=${SECRET_KEY_SERVER_HML2}
      - PORT=${PORT_HML2}
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8081:21466"
    networks:
      - wpp-network
    tty: true
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 500M
    depends_on:
      - mongo
      - redis
    volumes:
      - .:/app
      - ./userDataDir:/home/node/app/userDataDir
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT_HML2}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  wpp-network:
    name: wpp-network
    driver: bridge

volumes:
  mongo_data:
  redis_data:
