version: '3.8'

services:
  # mongo:
  #   image: mongo
  #   restart: on-failure:3
  #   container_name: mongodb
  #   environment:
  #     MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
  #   volumes:
  #     - mongo_data:/data/db
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - wpp-network

  redis:
    image: redis
    restart: on-failure:3
    container_name: redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - wpp-network

  wppconnect-server-hml:
    build:
      context: ./wppconnect-server-hml
      dockerfile: Dockerfile
    restart: always
    image: wppconnect-server-hml
    container_name: wppconnect-server-hml
    hostname: wppconnect-server-hml
    entrypoint: docker-entrypoint.sh yarn dev
    environment:
      - SECRET_KEY_SERVER=${SECRET_KEY_SERVER}
      - PORT=${PORT}
      # - MONGODB_HOST=${MONGODB_HOST}
      # - MONGODB_DATABASE=${MONGODB_DATABASE}
      # - MONGODB_USER=${MONGODB_USER}
      # - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8093:21483"
    networks:
      - wpp-network
    depends_on:
      # - mongo
      - redis
    volumes:
      - .:/app
      - ./userDataDir:/home/node/app/userDataDir
    tty: true
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 200M

networks:
  wpp-network:
    name: wpp-network
    driver: bridge

volumes:
  mongo_data:
  redis_data:
